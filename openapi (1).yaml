openapi: 3.0.1
info:
  title: EMD API
  description: API для работы с сервисом эталонных ролевых моделей
  version: 0.0.1
servers:
  - url: http://localhost:8443
    description: Generated server url
tags:
  - name: diff-controller
    description: ссссссссссссссс изменения по сущностям за указанный интервал
paths:
  /api/v1/emd/stands:
    post:
      tags:
        - stand-controller
      operationId: saveStand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandDto'
        required: true
      responses:
        '201':
          description: Created
  /api/v1/emd/script-handlers/{standName}/memberships/grant:
    post:
      tags:
        - script-handler-controller
      summary: Обработка добавления в группу
      operationId: handleGrantGroupToUser
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantGroupDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/ipa-users/invoked:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по сущности Ipa-User
      operationId: handleIpaUserPostInvoked
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpaUserDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/ipa-users/created:
    post:
      tags:
        - script-handler-controller
      summary: Обработка фактического создания сущности Ipa-User
      operationId: handleIpaUserPostCreated
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpaUserDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/ipa-groups/{groupId}/map-sentry:
    post:
      tags:
        - script-handler-controller
      summary: Обработка привязки роли Sentry к Ipa-Group
      operationId: handleSentryRoleMap
      parameters:
        - name: standName
          in: path
          description: Имя стенда где существует ipa-group
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
        - name: groupId
          in: path
          description: Идентификатор группы в IPA
          required: true
          schema:
            type: string
        - name: sentryRoleName
          in: query
          description: Имя Sentry-роли
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/ipa-groups/invoked:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по сущности Ipa-Group
      operationId: handleIpaGroupPostInvoked
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpaGroupDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/ipa-groups/created:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по создания сущности Ipa-Group
      operationId: handleIpaGroupPostCreated
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: ipa1.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpaGroupDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/hives/invoked:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по сущности Hadoop-Hive
      operationId: handleHadoopHivePostInvoked
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: hadoop.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HadoopHiveDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/hives/created:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по создания сущности Hadoop-Hive
      operationId: handleHadoopHivePostCreated
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: hadoop.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HadoopHiveDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/hbases/invoked:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по сущности Hadoop-HBase
      operationId: handleHadoopHBasePostInvoked
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: hadoop.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HadoopHBaseDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/hbases/created:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции по создания сущности Hadoop-HBase
      operationId: handleHadoopHBasePostCreated
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: hadoop.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HadoopHBaseDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/script-handlers/{standName}/aces:
    post:
      tags:
        - script-handler-controller
      summary: Обработка операции назначению ACE
      operationId: handleAcePostCreated
      parameters:
        - name: standName
          in: path
          description: Имя стенда где создается сущность
          required: true
          schema:
            type: string
          example: hadoop.dev.df.sbrf.ru
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AceDto'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/stands:
    get:
      tags:
        - diff-controller
      operationId: getStandDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandCollectionResponse'
  /api/v1/emd/diff/persons:
    get:
      tags:
        - diff-controller
      operationId: getPersonDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonCollectionResponse'
  /api/v1/emd/diff/memberships:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности Membership за указанный период
      operationId: getMembershipDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/ipa-users:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности IpaUser за указанный период
      operationId: getIpaUserDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpaUserCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/ipa-groups:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности IpaGroup за указанный период
      operationId: getIpaGroupDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpaGroupCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/hives:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности HadoopHive за указанный период
      operationId: getHadoopHiveDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HiveCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/hbases:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности HadoopHBase за указанный период
      operationId: getHadoopHBaseDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HBaseCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/v1/emd/diff/aces:
    get:
      tags:
        - diff-controller
      summary: Получить новые или измененные сущности ACE за указанный период
      operationId: getAceDiff
      parameters:
        - name: startLastModifiedDate
          in: query
          description: Дата и время начала интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '1970-01-01T00:00:00'
        - name: endLastModifiedDate
          in: query
          description: Дата и время окончания интервала
          required: false
          schema:
            type: string
            format: date-time
          example: '9999-01-01T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AceCollectionResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
components:
  schemas:
    DiffMembershipGroupRef:
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        principalId:
          type: string
          description: Идентификатор субъекта безопасности
        principalName:
          type: string
          description: Имя субъекта безопасности
        principalType:
          type: string
          description: Тип субъекта безопасности
          enum:
            - USER,GROUP
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
      description: Группа доступа
    DiffMembershipMemberRef:
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        principalId:
          type: string
          description: Идентификатор субъекта безопасности
        principalName:
          type: string
          description: Имя субъекта безопасности
        principalType:
          type: string
          description: Тип субъекта безопасности
          enum:
            - USER,GROUP
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
      description: Член группы доступа
    DiffAcePrincipalRef:
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        principalId:
          type: string
          description: Идентификатор субъекта безопасности
        principalName:
          type: string
          description: Имя субъекта безопасности
        principalType:
          type: string
          description: Тип субъекта безопасности
          enum:
            - USER,GROUP
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
      description: Cубъект, которому предоставлена привилегия
    DiffJustificationApplyClaim:
      type: object
      properties:
        claimNumber:
          type: string
          description: Номер заявки
        claimDate:
          type: string
          description: Дата заявки
          format: date-time
      description: Заявка на применение (ЗНО)
    DiffJustificationApproveClaim:
      type: object
      properties:
        claimNumber:
          type: string
          description: Номер заявки
        claimDate:
          type: string
          description: Дата заявки
          format: date-time
      description: Заявка на согласование (СЭОДО)
    ScriptHandlerApplyClaim:
      type: object
      properties:
        claimNumber:
          type: string
          description: Номер заявки
        claimDate:
          type: string
          description: Дата заявки
          format: date
          example: '2021-08-20'
      description: Заявка на применение (ЗНО)
    ScriptHandlerApproveClaim:
      type: object
      properties:
        claimNumber:
          type: string
          description: Номер заявки
        claimDate:
          type: string
          description: Дата заявки
          format: date
          example: '2021-08-20'
      description: Заявка на согласование (СЭОДО)
    ScriptHandlerDotoolsClaim:
      type: object
      properties:
        claimNumber:
          type: string
          description: Номер заявки
        claimDate:
          type: string
          description: Дата заявки
          format: date
          example: '2021-08-20'
      description: Заявка РРМ (DOTOOLS)
    ScriptHandlerMembershipGroupRef:
      required:
        - principalId
        - standName
      type: object
      properties:
        standName:
          type: string
          description: Название стенда
        principalId:
          type: string
          description: Идентификатор группы
      description: Группа доступа
    ScriptHandlerMembershipMemberRef:
      required:
        - principalId
        - principalType
        - standName
      type: object
      properties:
        standName:
          type: string
          description: Название стенда
        principalId:
          type: string
          description: Идентификатор субъекта
        principalType:
          type: string
          description: Тип субъекта
          enum:
            - USER
            - GROUP
      description: Член группы доступа
    ScriptHandlerAcePrincipalRef:
      required:
        - principalId
        - principalType
        - standName
      type: object
      properties:
        standName:
          type: string
          description: Название стенда
        principalId:
          type: string
          description: Идентификатор субъекта
        principalType:
          type: string
          description: Тип субъекта
          enum:
            - USER
            - GROUP
      description: Cубъект, которому предоставлена привилегия
    ScriptHandlerPersonOwner:
      type: object
      properties:
        login:
          type: string
          description: Логин сотрудника
        displayName:
          type: string
          description: Имя сотрудника
      description: Владелец
    StandDto:
      required:
        - deploymentEnv
        - name
      type: object
      properties:
        name:
          type: string
          description: Название стенда
          example: ipa1.dev.df.sbrf.ru
        hdfsNameService:
          type: string
          description: Hdfs name service
        deploymentEnv:
          type: string
          description: Среда, в которой расположен стенд
          example: DEV
    GrantGroupDto:
      required:
        - group
        - member
      type: object
      properties:
        group:
          $ref: '#/components/schemas/ScriptHandlerMembershipGroupRef'
        member:
          $ref: '#/components/schemas/ScriptHandlerMembershipMemberRef'
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    JustificationInfoDto:
      type: object
      properties:
        applyClaim:
          $ref: '#/components/schemas/ScriptHandlerApplyClaim'
        approveClaim:
          $ref: '#/components/schemas/ScriptHandlerApproveClaim'
        dotoolsClaim:
          $ref: '#/components/schemas/ScriptHandlerDotoolsClaim'
      description: Информация об обосновании
    PersonDto:
      type: object
      properties:
        login:
          type: string
          description: Логин сотрудника
        displayName:
          type: string
          description: Имя сотрудника
      description: Инициатор
    DepartmentDto:
      type: object
      properties:
        name:
          type: string
          description: Имя департамента
      description: Департамент
    ITServiceDto:
      type: object
      properties:
        serviceName:
          type: string
          description: Название ИТ-услуги
        serviceType:
          type: string
          description: Тип ИТ-услуги
        confElement:
          type: string
          description: КЭ
      description: ИТ-услуга
    IpaUserDto:
      required:
        - userId
        - username
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор в IPA
        accountType:
          type: string
          description: Тип учетной записи
          enum:
            - TUZ
            - UZP
        username:
          type: string
          description: Имя пользователя в IPA
        description:
          type: string
          description: Описание
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    OwnershipInfoDto:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/ScriptHandlerPersonOwner'
        department:
          $ref: '#/components/schemas/DepartmentDto'
        itService:
          $ref: '#/components/schemas/ITServiceDto'
      description: Информация о владельцах
    IpaGroupDto:
      required:
        - groupId
        - groupName
      type: object
      properties:
        groupId:
          type: string
          description: Идентификатор в IPA
        groupName:
          type: string
          description: Название группы в IPA
        description:
          type: string
          description: Описание
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    HadoopHiveDto:
      required:
        - databaseName
        - location
      type: object
      properties:
        databaseName:
          type: string
          description: Имя базы данных
        location:
          type: string
          description: HDFS-path
        description:
          type: string
          description: Описание
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    HadoopHBaseDto:
      required:
        - namespace
      type: object
      properties:
        namespace:
          type: string
          description: Пространство имен
        description:
          type: string
          description: Описание
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    AceDto:
      required:
        - principal
        - privilege
        - product
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductRefDto'
        principal:
          $ref: '#/components/schemas/ScriptHandlerAcePrincipalRef'
        privilege:
          type: string
          description: Привилегия
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoDto'
        requester:
          $ref: '#/components/schemas/PersonDto'
    ProductRefDto:
      required:
        - productName
        - productType
        - standName
      type: object
      properties:
        standName:
          type: string
          description: Название стенда
        productName:
          type: string
          description: Название объекта
        productType:
          type: string
          description: Тип объекта
          enum:
            - HBASE
            - HIVE
      description: Объект, на который применяется привилегия
    StandCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/StandView'
    StandView:
      required:
        - deploymentEnv
        - lastModifiedDate
        - name
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор стенда
          format: int64
        name:
          type: string
          description: Название стенда
          example: ipa1.dev.df.sbrf.ru
        deploymentEnv:
          type: string
          description: Среда, в которой расположен стенд
          example: DEV
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
    PersonCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PersonView'
    PersonView:
      required:
        - lastModifiedDate
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        login:
          type: string
          description: Логин пользователя
        displayName:
          type: string
          description: Отображаемое имя пользователя
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
    JustificationInfoView:
      type: object
      properties:
        approveClaim:
          $ref: '#/components/schemas/DiffJustificationApplyClaim'
        applyClaim:
          $ref: '#/components/schemas/DiffJustificationApproveClaim'
      description: Информация о обосновании
    MembershipCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MembershipView'
    MembershipView:
      required:
        - lastModifiedDate
        - provisionedDate
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        group:
          $ref: '#/components/schemas/DiffMembershipGroupRef'
        member:
          $ref: '#/components/schemas/DiffMembershipMemberRef'
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        requesterId:
          type: integer
          description: Инициатор
          format: int64
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обоснования
          format: date-time
    ITServiceView:
      type: object
      properties:
        serviceName:
          type: string
          description: Название ИТ-услуги
        serviceType:
          type: string
          description: Тип ИТ-услуги
      description: ИТ-услуга
    IpaUserCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/IpaUserView'
    IpaUserView:
      required:
        - accountType
        - id
        - lastModifiedDate
        - provisionedDate
        - userId
        - username
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
          example: 1000
        userId:
          type: string
          description: Идентификатор в IPA
        username:
          type: string
          description: Имя пользователя в IPA
        accountType:
          type: string
          description: Тип учетной записи
          enum:
            - TUZ,UZP
        description:
          type: string
          description: Описание
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
        requesterId:
          type: integer
          description: Инициатор
          format: int64
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoView'
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обеспечения
          format: date-time
        deleted:
          type: boolean
          description: Признак удаления
    OwnershipInfoView:
      type: object
      properties:
        itService:
          $ref: '#/components/schemas/ITServiceView'
        personId:
          type: integer
          description: Владелец
          format: int64
        department:
          type: string
          description: Департамент
      description: Информация о владельцах
    IpaGroupCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/IpaGroupView'
    IpaGroupView:
      required:
        - groupId
        - groupName
        - id
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
          example: 1000
        groupId:
          type: string
          description: Идентификатор в IPA
        groupName:
          type: string
          description: Название группы в IPA
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
        sentryRoleName:
          type: string
          description: Название Sentry-роли
        requesterId:
          type: integer
          description: Инициатор
          format: int64
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoView'
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обеспечения
          format: date-time
    HadoopHiveView:
      required:
        - lastModifiedDate
        - provisionedDate
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        productName:
          type: string
          description: Название продукта
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
        location:
          type: string
          description: HDFS-path
        databaseName:
          type: string
          description: Имя базы данных
        description:
          type: string
          description: Описание
        requesterId:
          type: integer
          description: Инициатор
          format: int64
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoView'
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обеспечения
          format: date-time
    HiveCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/HadoopHiveView'
    HBaseCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/HadoopHBaseView'
    HadoopHBaseView:
      required:
        - lastModifiedDate
        - provisionedDate
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        namespace:
          type: string
        productName:
          type: string
        standId:
          type: integer
          format: int64
        requesterId:
          type: integer
          format: int64
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        ownershipInfo:
          $ref: '#/components/schemas/OwnershipInfoView'
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обеспечения
          format: date-time
    AceCollectionResponse:
      required:
        - content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AceView'
    AceView:
      required:
        - lastModifiedDate
        - provisionedDate
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        product:
          $ref: '#/components/schemas/ProductRefView'
        principal:
          $ref: '#/components/schemas/DiffAcePrincipalRef'
        privilege:
          type: string
          description: Привиления
        justificationInfo:
          $ref: '#/components/schemas/JustificationInfoView'
        deleted:
          type: boolean
          description: Признак удаления
        lastModifiedDate:
          type: string
          description: Дата изменения
          format: date-time
        provisionedDate:
          type: string
          description: Дата обеспечения
          format: date-time
        requesterId:
          type: integer
          description: Инициатор
          format: int64
    ProductRefView:
      type: object
      properties:
        id:
          type: integer
          description: Внутренний идентификатор
          format: int64
        productName:
          type: string
          description: Название объекта
        standId:
          type: integer
          description: Идентификатор стенда
          format: int64
      description: Объект, на который применяется привилегия
